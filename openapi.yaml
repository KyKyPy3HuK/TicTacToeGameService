openapi: 3.0.0
info:
  title: TicTacToeGame API
  description: API для игры в крестики нолики с машиной
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /game/new:
    post:
      summary: Создает новую доску
      description: Создает и возвращает новую доску. Если игрок имеет активную доску то ей присваивается статус "FINISHED".
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                isPlayerFirst:
                  type: boolean
                  description: Определяет, ходит ли игрок первым (крестиками) (по умолчанию true)
                  example: true
      responses:
        '201':
          description: Новая доска успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardDTO'
  /game:
    get:
      summary: Возвращает текущую доску пользователя
      description: Возвращает текущую доску пользователя, если она существует.
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardDTO'
        '404':
          description: Доска не найдена
          content:
            text/plain:
              schema:
                type: string
                example: "Error 404 - Not found: Board not found"
  /game/move:
    post:
      summary: Сделать ход на доске
      description: Выполняет ход на доске по указанной позиции. Возвращает доску с ходом игрока и ответным ходом машины
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pos:
                  type: integer
                  description: Позиция для хода (от 0 до 8)
                  example: 5
              required:
                - pos
      responses:
        '201':
          description: Успех, возврат доски с ходом игрока и ответным ходом машины
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardDTO'
        '403':
          description: Некорректный ход
          content:
            text/plain:
              schema:
                type: string
                example: "Error 403 - Forbidden: Illegal move"
        '404':
          description: Доска не найдена
          content:
            text/plain:
              schema:
                type: string
                example: "Error 404 - Not found: Board not found"
  /game/undo:
    post:
      summary: Отменить последний ход
      description: Отменяет последний ход игрока и последний ход машины, или только ход машины, если игрок еще не ходил.
      responses:
        '200':
          description: Ход успешно отменен. Возврат доски с отмененным ходом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardDTO'
        '403':
          description: Невозможно отменить ход
          content:
            text/plain:
              schema:
                type: string
                example: "Error 403 - Forbidden: Illegal move undo"
        '404':
          description: Доска не найдена
          content:
            text/plain:
              schema:
                type: string
                example: "Error 404 - Not found: Board not found"
components:
  schemas:
    BoardDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор доски
        state:
          type: array
          description: Состояние доски в виде двумерного массива символов
          items:
            type: array
            items:
              type: string
              maxLength: 1
              description: Символ, представляющий состояние клетки ('X', 'O' или ' ')
        status:
          type: string
          description: Статус игры
          enum:
            - STARTED
            - FINISHED
            - DRAW
            - COMPUTER_WIN
            - PLAYER_WIN
        isUserFirst:
          type: boolean
          description: Определяет, ходит ли игрок первым (играет ли игрок за крестики)
        lastMoveTime:
          type: string
          format: date-time
          description: Время последнего хода
      required:
        - id
        - state
        - status
        - isUserFirst
        - lastMoveTime